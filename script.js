const wordList = [
    '–∞–∫–∞–¥–µ–º–∏—è', '–∞–∫–∞–¥–µ–º–∏—á–µ—Å–∫–∏–π', '–∞–∫–≤–∞—Ä–µ–ª—å', '–∞–∫–≤–∞—Ä–µ–ª—å–Ω—ã–π', '–∞–∫–∫–æ–º–ø–∞–Ω–µ–º–µ–Ω—Ç', '–∞–∫–∫–æ–º–ø–∞–Ω–∏—Ä–æ–≤–∞—Ç—å',
    '–∞–Ω–Ω–æ—Ç–∞—Ü–∏—è', '–∞–ø–ª–æ–¥–∏—Ä–æ–≤–∞—Ç—å', '–∞–ø–ª–æ–¥–∏—Å–º–µ–Ω—Ç—ã', '–∞–ø–ø–µ—Ç–∏—Ç', '–∞—Ä–æ–º–∞—Ç', '–∞—Ä–æ–º–∞—Ç–Ω—ã–π', '–∞—É–∫—Ü–∏–æ–Ω',
    '–±–∞–≥–∞–∂', '–±–∞–≥–∞–∂–Ω—ã–π', '–±–∞–≥—Ä–æ–≤—ã–π', '–±–∞–≥—Ä–æ–≤–µ—Ç—å', '–±–∞–ª–∫–æ–Ω', '–±–∞–ª–∫–æ–Ω–Ω—ã–π', '–±–µ—Ä—ë–∑–∞'
];

const wordsData = {
    "–∞–∫–∞–¥–µ–º–∏—è": "audio/0.mp3",
    "–∞–∫–∞–¥–µ–º–∏—á–µ—Å–∫–∏–π": "audio/1.mp3",
    "–∞–∫–≤–∞—Ä–µ–ª—å": "audio/2.mp3",
    "–∞–∫–≤–∞—Ä–µ–ª—å–Ω—ã–π": "audio/3.mp3",
    "–∞–∫–∫–æ–º–ø–∞–Ω–µ–º–µ–Ω—Ç": "audio/4.mp3",
    "–∞–∫–∫–æ–º–ø–∞–Ω–∏—Ä–æ–≤–∞—Ç—å": "audio/5.mp3",
    "–∞–Ω–Ω–æ—Ç–∞—Ü–∏—è": "audio/6.mp3",
    "–∞–ø–ª–æ–¥–∏—Ä–æ–≤–∞—Ç—å": "audio/7.mp3",
    "–∞–ø–ª–æ–¥–∏—Å–º–µ–Ω—Ç—ã": "audio/8.mp3",
    "–∞–ø–ø–µ—Ç–∏—Ç": "audio/9.mp3",
    "–∞—Ä–æ–º–∞—Ç": "audio/10.mp3",
    "–∞—Ä–æ–º–∞—Ç–Ω—ã–π": "audio/11.mp3",
    "–∞—É–∫—Ü–∏–æ–Ω": "audio/12.mp3",
    "–±–∞–≥–∞–∂": "audio/13.mp3",
    "–±–∞–≥–∞–∂–Ω—ã–π": "audio/14.mp3",
    "–±–∞–≥—Ä–æ–≤—ã–π": "audio/15.mp3",
    "–±–∞–≥—Ä–æ–≤–µ—Ç—å": "audio/16.mp3",
    "–±–∞–ª–∫–æ–Ω": "audio/17.mp3",
    "–±–∞–ª–∫–æ–Ω–Ω—ã–π": "audio/18.mp3",
    "–±–µ—Ä—ë–∑–∞": "audio/19.mp3"
};

let currentWordIndex = 0;
let currentAudio = null;
let mainBlock = null; // –≥–ª–∞–≤–Ω—ã–π –±–ª–æ–∫
let currentWord = null;

const container = document.getElementById('container');

// –§—É–Ω–∫—Ü–∏—è –ø–µ—Ä–µ–º–µ—à–∏–≤–∞–Ω–∏—è –º–∞—Å—Å–∏–≤–∞
function shuffleArray(array) {
    for (let i = array.length - 1; i > 0; i--) {
        const j = Math.floor(Math.random() * (i + 1));
        [array[i], array[j]] = [array[j], array[i]];
    }
    return array;
}

// –ü–µ—Ä–µ–º–µ—à–∏–≤–∞–µ–º —Å–ª–æ–≤–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ
shuffleArray(wordList);

function playAudio(audioPath) {
    if (currentAudio) {
        currentAudio.pause();
        currentAudio.currentTime = 0;
    }
    currentAudio = new Audio(audioPath);
    currentAudio.play().catch(err => console.error(err));
}

function createMainBlock(wordIndex) {
    currentWord = wordList[wordIndex];
    const audioPath = wordsData[currentWord];

    mainBlock = document.createElement('div');
    mainBlock.className = 'word-block';
    mainBlock.innerHTML = `
        <div class="error-message">‚ùå –•–º–º... –±—É–∫–≤—ã –Ω–µ –¥—Ä—É–∂–∞—Ç —Å–µ–≥–æ–¥–Ω—è!</div>
        <div class="input-container">
            <button class="sound-button" data-audio="${audioPath}">
                <span class="sound-icon">üîä</span>
            </button>
            <input type="text" class="input-field" placeholder="–í–≤–µ–¥–∏—Ç–µ —Å–ª–æ–≤–æ..." autocomplete="off">
        </div>
    `;

    container.prepend(mainBlock);

    const input = mainBlock.querySelector('.input-field');
    const errorMsg = mainBlock.querySelector('.error-message');
    const soundButton = mainBlock.querySelector('.sound-button');

    // –ê–≤—Ç–æ–≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ –Ω–æ–≤–æ–≥–æ —Å–ª–æ–≤–∞
    setTimeout(() => playAudio(audioPath), 300);

    soundButton.addEventListener('click', () => playAudio(soundButton.dataset.audio));
    setTimeout(() => input.focus(), 100);

    input.addEventListener('keypress', (e) => {
        if (e.key === 'Enter') {
            checkAnswer(input.value.trim(), errorMsg, input, soundButton);
        }
    });
}

function checkAnswer(userInput, errorMsg, input, soundButton) {
    if (userInput.toLowerCase() === currentWord.toLowerCase()) {
        const historyBlock = document.createElement('div');
        historyBlock.className = 'history-block';
        historyBlock.textContent = `‚úì ${currentWord}`;
        container.insertBefore(historyBlock, mainBlock.nextSibling);

        input.value = '';
        currentWordIndex++;

        if (currentWordIndex < wordList.length) {
            currentWord = wordList[currentWordIndex];
            const audioPath = wordsData[currentWord];
            soundButton.dataset.audio = audioPath;

            // –ê–≤—Ç–æ–≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ –Ω–æ–≤–æ–≥–æ —Å–ª–æ–≤–∞
            playAudio(audioPath);

            input.placeholder = "–í–≤–µ–¥–∏—Ç–µ —Å–ª–æ–≤–æ...";
            input.focus();
        } else {
            showCompletion();
        }
    } else {
        input.value = '';
        mainBlock.classList.add('shake');
        errorMsg.classList.add('show');
        setTimeout(() => {
            mainBlock.classList.remove('shake');
            errorMsg.classList.remove('show');
        }, 600);
    }
}

function showCompletion() {
    // –ó–∞–º–µ–Ω—è–µ–º –≥–ª–∞–≤–Ω—ã–π –±–ª–æ–∫ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ
    const completionMsg = document.createElement('div');
    completionMsg.className = 'word-block';
    completionMsg.style.color = '#ffffff';
    completionMsg.innerHTML = '‚úÖ –û—Ç–ª–∏—á–Ω–æ! –¢—ã –ø—Ä–æ—à—ë–ª –¥–∏–∫—Ç–∞–Ω—Ç.<br><small style="font-size: 1.2rem;color: #ffffff; opacity: 0.9; display: block; margin-top: 10px;">–í—Å–µ —Å–ª–æ–≤–∞ –Ω–∞–ø–∏—Å–∞–Ω—ã –ø—Ä–∞–≤–∏–ª—å–Ω–æ!</small>';

    container.replaceChild(completionMsg, mainBlock);
}

document.addEventListener('DOMContentLoaded', () => {
    createMainBlock(0);
});
